name: Data Ingestion Schedule

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC

jobs:
  prepare-package:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Prepare Python Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsSession

      - name: Login to CodeArtifact (AWS Utils)
        id: caawsutils
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain "${{ secrets.CODEARTIFACT_DOMAIN }}" \
            --domain-owner "${{ secrets.CODEARTIFACT_OWNER }}" \
            --query authorizationToken --output text --region eu-west-1)
          echo "PIP_INDEX_URL=https://aws:${CODEARTIFACT_AUTH_TOKEN}@${{ secrets.AWSUTILS_CODEARTIFACT_ENDPOINT }}" >> $GITHUB_ENV

      - name: Get Latest Version (AWS Utils)
        id: awsutils
        run: |
          VERSION=$(aws ssm get-parameter \
            --name "${{ secrets.AWSUTILS_VERSION_SSM_PARAMETER }}" \
            --query "Parameter.Value" --output text --region eu-west-1)
          echo "AWSUTILS_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Dependency Wheels (AWS Utils)
        run: |
          PACKAGE="equicast-awsutils"
          VERSION="${AWSUTILS_VERSION#v}"
          pip wheel "$PACKAGE==$VERSION" \
            --wheel-dir wheels --index-url $PIP_INDEX_URL --extra-index-url https://pypi.org/simple

      - name: Login to CodeArtifact (Python Utils)
        id: capyutils
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain "${{ secrets.CODEARTIFACT_DOMAIN }}" \
            --domain-owner "${{ secrets.CODEARTIFACT_OWNER }}" \
            --query authorizationToken --output text --region eu-west-1)
          echo "PIP_INDEX_URL=https://aws:${CODEARTIFACT_AUTH_TOKEN}@${{ secrets.PYUTILS_CODEARTIFACT_ENDPOINT }}" >> $GITHUB_ENV

      - name: Get Latest Version (Python Utils)
        id: pyutils
        run: |
          VERSION=$(aws ssm get-parameter \
            --name "${{ secrets.PYUTILS_VERSION_SSM_PARAMETER }}" \
            --query "Parameter.Value" --output text --region eu-west-1)
          echo "PYUTILS_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Dependency Wheels (Python Utils)
        run: |
          PACKAGE="equicast-pyutils"
          VERSION="${PYUTILS_VERSION#v}"
          pip wheel "$PACKAGE==$VERSION" \
            --wheel-dir wheels --index-url $PIP_INDEX_URL --extra-index-url https://pypi.org/simple

      - name: Build Dependency Wheels
        run: |
          export PIP_INDEX_URL=https://pypi.org/simple
          pip wheel -r requirements.txt --wheel-dir wheels
          pip wheel -r requirements-dev.txt --wheel-dir wheels

      - name: Cache Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Build Package
        run: |
          export PIP_INDEX_URL=https://pypi.org/simple
          python -m build

      - name: Cache Built Package
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

  test:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Execute Tests
    runs-on: ubuntu-latest
    needs: prepare-package
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels
          pip install -r requirements-dev.txt

      - name: Install Package
        run: |
          pip install dist/*.whl

      - name: Run Test Cases
        run: |
          pytest tests -vv -rEPW -o pytest_collection_order=alphabetical \
            --cache-clear --color=yes --html=pytest_results.html --self-contained-html

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: pytest_results.html

  download:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Download FX and Stock Tickers
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: |
          pip install dist/*.whl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsSession

      - name: Run Downloader
        run: |
          python scripts/downloader.py

      - name: Cache "downloads"
        uses: actions/cache@v4
        with:
          path: downloads
          key: downloads-${{ github.run_id }}

  process-fx:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Process FX Pairs
    runs-on: ubuntu-latest
    needs: download
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Restore "downloads"
        uses: actions/cache@v4
        with:
          path: downloads
          key: downloads-${{ github.run_id }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: |
          pip install dist/*.whl

      - name: Run FX Processor
        run: |
          python scripts/fx_processor.py

      - name: Cache "fx_downloads"
        uses: actions/cache@v4
        with:
          path: fx_downloads
          key: fx_downloads-${{ github.run_id }}

      - name: Upload "error.log"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: error-log
          path: fx_downloads/error.log

  upload-fx:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Upload FX Pair Outputs
    runs-on: ubuntu-latest
    needs: process-fx
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Restore "fx_downloads"
        uses: actions/cache@v4
        with:
          path: fx_downloads
          key: fx_downloads-${{ github.run_id }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: |
          pip install dist/*.whl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsSession

      - name: Estimate S3 Storage Cost
        id: s3_fx
        run: |
          python scripts/calculate_s3_cost.py \
            --directory-path "fx_downloads" \
            --file-pattern "*.parquet"

      - name: Upload FX Pair Parquet Files
        run: |
          python scripts/uploader.py \
            --directory-path "fx_downloads" \
            --file-pattern "*.parquet" \
            --custom-message "Upload FX Pair Parquet Files" \
            --s3-bucket "equicast-ingestion" \
            --mode "fx"

  split-stock:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Split Stocks
    runs-on: ubuntu-latest
    needs: download
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.gen_matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Restore "downloads"
        uses: actions/cache@v4
        with:
          path: downloads
          key: downloads-${{ github.run_id }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: pip install dist/*.whl

      - name: Run Splitter
        id: gen_matrix
        env:
          CHUNK_SIZE: 200
        run: |
          CHUNK_SIZE=$CHUNK_SIZE
          echo "🔢 Using CHUNK_SIZE=$CHUNK_SIZE"
          python scripts/splitter.py downloads/tickers.json $CHUNK_SIZE 'stock' 
          echo "🔁 Reading chunk IDs from file..."
          MATRIX=$(jq -c . < stock_chunks.json)
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

      - name: Cache "stock_chunks"
        uses: actions/cache@v4
        with:
          path: stock_chunks
          key: stock_chunks-${{ github.run_id }}

  process-stock:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Process Stocks
    runs-on: ubuntu-latest
    needs: split-stock
    permissions:
      contents: read
    strategy:
      fail-fast: true
      max-parallel: 25
      matrix:
        chunk_id: ${{ fromJson(needs.split-stock.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Restore "stock_chunks"
        uses: actions/cache@v4
        with:
          path: stock_chunks
          key: stock_chunks-${{ github.run_id }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: pip install dist/*.whl

      - name: Run Stock Processor
        run: |
          echo "🚀 Running for chunk ID: ${{ matrix.chunk_id }}"
          python scripts/stock_processor.py "stock_chunks/chunk_${{ matrix.chunk_id }}.json"

      - name: Cache "stock_downloads"
        uses: actions/cache@v4
        with:
          path: stock_downloads
          key: stock_downloads-${{ github.run_id }}

      - name: Upload "error.log"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: error-log-${{ matrix.chunk_id }}
          path: stock_downloads/error.log

  upload-stock:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Upload Stock Ticker Outputs
    runs-on: ubuntu-latest
    needs: process-stock
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Restore "stock_downloads"
        uses: actions/cache@v4
        with:
          path: stock_downloads
          key: stock_downloads-${{ github.run_id }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: pip install dist/*.whl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsSession

      - name: Estimate S3 Storage Cost
        id: s3_stock
        run: |
          python scripts/calculate_s3_cost.py stock_downloads '*.parquet' 'Stock Ticker Outputs'

      - name: Upload Stock Ticker Parquet Files
        run: |
          python scripts/uploader.py stock_downloads '*.parquet' 'Upload Stock Ticker Parquet Files' 'equicast-ingestion' 'stock'
