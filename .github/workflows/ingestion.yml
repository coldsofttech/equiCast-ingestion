name: Data Ingestion Schedule

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC

jobs:
  prepare-package:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Prepare Python Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsSession

      - name: Login to CodeArtifact
        id: codeartifact
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain "${{ secrets.PYUTILS_CODEARTIFACT_DOMAIN }}" \
            --domain-owner "${{ secrets.PYUTILS_CODEARTIFACT_OWNER }}" \
            --query authorizationToken --output text --region eu-west-1)
          echo "PIP_INDEX_URL=https://aws:${CODEARTIFACT_AUTH_TOKEN}@${{ secrets.PYUTILS_CODEARTIFACT_ENDPOINT }}" >> $GITHUB_ENV

      - name: Build Dependency Wheels
        run: |
          mkdir -p wheels
          pip wheel -r requirements.txt -r requirements-dev.txt \
            --wheel-dir wheels --extra-index-url https://pypi.org/simple
          ls wheels

      - name: Cache Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Build Package
        run: |
          export PIP_INDEX_URL=https://pypi.org/simple
          python -m build

      - name: Cache Built Package
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

  test:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Execute Tests
    runs-on: ubuntu-latest
    needs: prepare-package
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: pip install dist/*.whl

      - name: Run Test Cases
        run: pytest tests -vv -rEPW -o pytest_collection_order=alphabetical --cache-clear --color=yes --html=pytest_results.html --self-contained-html

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: pytest_results.html

  download:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Download FX and Stock Tickers
    runs-on: ubuntu-latest
    needs: [ prepare-package, test ]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: pip install dist/*.whl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsSession

      - name: Run Downloader
        run: |
          python scripts/downloader.py

      - name: Cache "downloads"
        uses: actions/cache@v4
        with:
          path: downloads
          key: downloads-${{ github.run_id }}

  process-fx:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Process FX Pairs
    runs-on: ubuntu-latest
    needs: [ prepare-package, test, download ]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Restore Built Package Cache
        uses: actions/cache@v4
        with:
          path: dist
          key: built-package-${{ github.run_id }}

      - name: Restore Dependency Wheels
        uses: actions/cache@v4
        with:
          path: wheels
          key: wheels-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Restore "downloads"
        uses: actions/cache@v4
        with:
          path: downloads
          key: downloads-${{ github.run_id }}

      - name: Install Dependencies from Wheels
        run: |
          pip install wheels/* --no-index --find-links wheels

      - name: Install Package
        run: pip install dist/*.whl

      - name: Run FX Processor
        run: |
          python scripts/fx_processor.py

      - name: Cache "fx_downloads"
        uses: actions/cache@v4
        with:
          path: fx_downloads
          key: fx_downloads-${{ github.run_id }}

      - name: Upload "error.log"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: error-log
          path: fx_downloads\error.log