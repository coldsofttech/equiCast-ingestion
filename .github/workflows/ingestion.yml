name: Data Ingestion Schedule

on:
  workflow_dispatch:
    inputs:
      full_run:
        description: "Run Full Load Extraction"
        required: false
        default: false
        type: boolean
      skip_test:
        description: "Skip Execute Test Cases"
        required: false
        default: false
        type: boolean
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC
    - cron: '0 9 * * 1'  # Weekly at 9 AM UTC (every Monday)
    - cron: '0 13 1 * *'  # Monthly at 1 PM UTC (every 1st of Month)
    - cron: '0 16 1 */3 *'  # Quarterly at 4 PM UTC (every 1st of 3rd Month)

jobs:
  prepare-package:
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    name: Prepare Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          run-id: ${{ github.run_id }}
      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-aws
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Build AWS Utils
        uses: ./.github/actions/build-codeartifact
        with:
          package-name: "equicast-awsutils"
          domain: ${{ secrets.CODEARTIFACT_DOMAIN }}
          owner: ${{ secrets.CODEARTIFACT_OWNER }}
          endpoint: ${{ secrets.AWSUTILS_CODEARTIFACT_ENDPOINT }}
          ssm-parameter: ${{ secrets.AWSUTILS_VERSION_SSM_PARAMETER }}
      - name: Build Python Utils
        uses: ./.github/actions/build-codeartifact
        with:
          package-name: "equicast-pyutils"
          domain: ${{ secrets.CODEARTIFACT_DOMAIN }}
          owner: ${{ secrets.CODEARTIFACT_OWNER }}
          endpoint: ${{ secrets.PYUTILS_CODEARTIFACT_ENDPOINT }}
          ssm-parameter: ${{ secrets.PYUTILS_VERSION_SSM_PARAMETER }}
      - name: Build Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          run-id: ${{ github.run_id }}
      - name: Build Package
        uses: ./.github/actions/build-package
        with:
          run-id: ${{ github.run_id }}

  test:
    if: github.event_name == 'workflow_dispatch' && !github.event.inputs.skip_test
    name: Execute Test Cases
    runs-on: ubuntu-latest
    needs: prepare-package
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run Test Cases
        run: |
          pytest tests -vv -rEPW -o pytest_collection_order=alphabetical \
            --cache-clear --color=yes --html=pytest_results.html --self-contained-html
        shell: bash
      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: pytest_results.html

  download-fx:
    name: Download FX
    runs-on: ubuntu-latest
    needs: prepare-package
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-aws
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Run Downloader
        uses: ./.github/actions/run-downloader
        with:
          mode: fx
          run-id: ${{ github.run_id }}

  split-fx:
    name: Split FX
    runs-on: ubuntu-latest
    needs: download-fx
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.split.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run Splitter
        id: split
        uses: ./.github/actions/run-splitter
        with:
          mode: fx
          chunk-size: 20
          run-id: ${{ github.run_id }}

  process-fx-prices:
    name: Process FX Prices (Daily Job)
    runs-on: ubuntu-latest
    needs: split-fx
    permissions:
      contents: read
    strategy:
      fail-fast: true
      max-parallel: 20
      matrix:
        chunk_id: ${{ fromJson(needs.split-fx.outputs.matrix) }}
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main' && startsWith(github.event.schedule, '0 1'))
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run FX Prices
        uses: ./.github/actions/run-fx
        with:
          process-name: Prices
          process-pyfile: fx_prices
          chunk-id: ${{ matrix.chunk_id }}
          full-run: ${{ github.event.inputs.full_run }}
          run-id: ${{ github.run_id }}

  process-fx-fundamentals:
    name: Process FX Fundamentals (Daily Job)
    runs-on: ubuntu-latest
    needs: split-fx
    permissions:
      contents: read
    strategy:
      fail-fast: true
      max-parallel: 20
      matrix:
        chunk_id: ${{ fromJson(needs.split-fx.outputs.matrix) }}
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main' && startsWith(github.event.schedule, '0 1'))
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run FX Fundamentals
        uses: ./.github/actions/run-fx
        with:
          process-name: Fundamentals
          process-pyfile: fx_fundamentals
          chunk-id: ${{ matrix.chunk_id }}
          run-id: ${{ github.run_id }}

  process-fx-calculations:
    name: Process FX Calculations (Weekly Job)
    runs-on: ubuntu-latest
    needs: split-fx
    permissions:
      contents: read
    strategy:
      fail-fast: true
      max-parallel: 20
      matrix:
        chunk_id: ${{ fromJson(needs.split-fx.outputs.matrix) }}
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main' && startsWith(github.event.schedule, '0 9'))
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run FX Calculations
        uses: ./.github/actions/run-fx
        with:
          process-name: Calculations
          process-pyfile: fx_calculations
          chunk-id: ${{ matrix.chunk_id }}
          run-id: ${{ github.run_id }}

  process-fx-forecast:
    name: Process FX Forecast (Monthly Job)
    runs-on: ubuntu-latest
    needs: split-fx
    permissions:
      contents: read
    strategy:
      fail-fast: true
      max-parallel: 20
      matrix:
        chunk_id: ${{ fromJson(needs.split-fx.outputs.matrix) }}
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main' && startsWith(github.event.schedule, '0 13'))
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run FX Forecast
        uses: ./.github/actions/run-fx
        with:
          process-name: Forecast
          process-pyfile: fx_forecast
          chunk-id: ${{ matrix.chunk_id }}
          run-id: ${{ github.run_id }}

  process-fx-profile:
    name: Process FX Profile (Quarterly Job)
    runs-on: ubuntu-latest
    needs: split-fx
    permissions:
      contents: read
    strategy:
      fail-fast: true
      max-parallel: 20
      matrix:
        chunk_id: ${{ fromJson(needs.split-fx.outputs.matrix) }}
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main' && startsWith(github.event.schedule, '0 16'))
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Run FX Profile
        uses: ./.github/actions/run-fx
        with:
          process-name: Profile
          process-pyfile: fx_profile
          chunk-id: ${{ matrix.chunk_id }}
          run-id: ${{ github.run_id }}

  upload-fx:
    name: Upload FX
    runs-on: ubuntu-latest
    needs:
      - process-fx-prices
      - process-fx-fundamentals
      - process-fx-calculations
      - process-fx-forecast
      - process-fx-profile
    if: always()
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          from-wheels: true
          run-id: ${{ github.run_id }}
      - name: Install Package
        uses: ./.github/actions/install-package
        with:
          run-id: ${{ github.run_id }}
      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-aws
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Run Uploader
        uses: ./.github/actions/run-uploader
        with:
          mode: fx
          pattern: "*.parquet"
          message: "Upload FX Parquet Files"
          s3-bucket: "equicast-ingestion"
          run-id: ${{ github.run_id }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  clean-up:
    name: Cleanup
    runs-on: ubuntu-latest
    needs:
      - upload-fx
    if: always()
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Run Uploader
        uses: ./.github/actions/run-uploader
        with:
          mode: fx
          pattern: "*.parquet"
          message: "Upload FX Parquet Files"
          s3-bucket: "equicast-ingestion"
          run-id: ${{ github.run_id }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup All Artifacts
        uses: ./.github/actions/cleanup
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          gh-repository: ${{ github.repository }}